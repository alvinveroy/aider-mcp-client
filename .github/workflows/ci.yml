name: CI

permissions:
  contents: write  # Required for creating/pushing tags
  id-token: write  # Required for OIDC authentication

on: 
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Create virtual environment and install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv pip install --upgrade pip
        uv pip install -e .[dev]
        uv pip install pytest pytest-cov
        # Try to install mcp with CLI tools using uv
        uv pip install "mcp[cli]" || echo "Could not install mcp package, continuing anyway"
    
    - name: Run tests
      run: |
        source .venv/bin/activate
        AIDER_MCP_TEST_MODE=true python -m pytest -v
    
    - name: Install and run flake8
      run: |
        source .venv/bin/activate
        uv pip install flake8
        flake8 aider_mcp_client

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Build package
        run: |
          python -m pip install build
          python -m build
          ls -la dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

      - name: Bump version and create tag
        id: bump-version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: |
            if [ "${{ github.event_name }}" = "push" ]; then
              git fetch --tags
              latest_tag=$(git describe --tags --abbrev=0)
              if [ -z "$latest_tag" ]; then
                echo "0.0.1a0"
              else
                if [[ $latest_tag == *"a"* ]]; then
                  # For alpha versions, just increment the alpha number
                  echo $latest_tag | awk -F'[a.]' -v OFS='.' '{$NF = $NF + 1; print $0"a"$NF}'
                else
                  # For stable versions, create new alpha
                  echo "$(echo $latest_tag | awk -F. -v OFS='.' '{$NF = $NF + 1; print}')a0"
                fi
              fi
            fi

      - name: Update version in files
        run: |
          echo "__version__ = \"${{ steps.bump-version.outputs.new_tag }}\"" > aider_mcp_client/__init__.py
          sed -i "s/version=\"[^\"]*\"/version=\"${{ steps.bump-version.outputs.new_tag }}\"/g" setup.py

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.bump-version.outputs.new_tag }}
          tag_name: ${{ steps.bump-version.outputs.new_tag }}
          generate_release_notes: true
          draft: false
          prerelease: false

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # No password needed when using trusted publishing
          packages-dir: dist/
